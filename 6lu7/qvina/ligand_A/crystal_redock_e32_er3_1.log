############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: 180844038
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.1      0.000      0.000
   2         -6.8      3.433      7.384
   3         -6.7      2.578      7.102
   4         -6.5      3.397      7.844
   5         -6.5      3.592      7.977
   6         -6.4      2.801      8.210
   7         -6.4      2.046      5.843
   8         -6.4      2.211      7.653
   9         -6.3      3.375      8.226
  10         -6.3      3.684      8.605
  11         -6.3      2.830      6.004
  12         -6.3      2.836      7.486
  13         -6.2      2.730      7.096
  14         -6.2      2.854      7.186
  15         -6.2      3.170      8.319
  16         -6.2      3.413      9.464
  17         -6.1      4.031      9.989
  18         -6.1      2.882      7.460
  19         -6.1      2.363      7.124
  20         -6.1      3.585      9.423
Writing output ... done.
