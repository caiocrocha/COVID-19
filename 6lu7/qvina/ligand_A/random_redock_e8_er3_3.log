############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -1286132824
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -6.8      0.000      0.000
   2         -6.7      3.949      7.794
   3         -6.5      3.024      7.776
   4         -6.4      3.696      8.611
   5         -6.4      3.257      8.122
   6         -6.4      3.171      7.907
   7         -6.3      2.823      8.349
   8         -6.3      2.741      6.889
   9         -6.0      3.919      9.450
  10         -6.0      3.401      8.107
  11         -5.9      1.912      3.936
  12         -5.9      3.688      8.148
  13         -5.9      3.909      7.669
  14         -5.8      3.566      8.044
  15         -5.8      3.730      7.687
  16         -5.8      3.317      7.809
  17         -5.7      3.492      7.887
  18         -5.7      4.371      7.956
  19         -5.6      3.546      7.526
  20         -5.6      3.824      7.371
Writing output ... done.
