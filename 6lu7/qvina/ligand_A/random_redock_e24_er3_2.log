############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: 1041482293
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -6.5      0.000      0.000
   2         -6.2      3.163      8.078
   3         -6.2      2.369      6.324
   4         -6.2      3.143      7.215
   5         -6.1      3.280      6.818
   6         -6.1      2.104      4.527
   7         -6.0      3.958      8.644
   8         -6.0      2.470      7.586
   9         -5.9      3.251      9.094
  10         -5.9      3.473      8.166
  11         -5.9      2.548      8.174
  12         -5.9      3.208      7.770
  13         -5.9      3.139      6.437
  14         -5.8      3.927      8.467
  15         -5.8      3.389      7.981
  16         -5.8      3.250      8.326
  17         -5.8      1.836      5.350
  18         -5.7      4.703      9.469
  19         -5.7      2.677      7.648
  20         -5.7      2.861      8.562
Writing output ... done.
