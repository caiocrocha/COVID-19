############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: 332295613
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.3      0.000      0.000
   2         -6.7      3.245      8.042
   3         -6.6      1.957      5.592
   4         -6.6      1.988      8.692
   5         -6.6      2.622      6.014
   6         -6.6      2.189      6.888
   7         -6.5      1.443      1.999
   8         -6.5      2.610      5.546
   9         -6.4      3.392      7.641
  10         -6.4      2.557      7.920
  11         -6.4      2.241      8.090
  12         -6.3      2.286      8.245
  13         -6.3      1.931      2.741
  14         -6.3      3.100      7.794
  15         -6.1      4.076      8.147
  16         -6.1      3.076      9.424
  17         -6.1      3.727      9.569
  18         -6.1      2.891      6.485
  19         -6.1      2.600      7.412
  20         -6.0      3.345      7.805
Writing output ... done.
