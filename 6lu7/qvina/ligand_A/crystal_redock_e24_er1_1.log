############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -277871576
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -6.9      0.000      0.000
   2         -6.6      3.387      7.951
   3         -6.6      2.665      9.004
   4         -6.5      2.883      7.020
   5         -6.5      3.498      6.381
   6         -6.5      3.096      8.029
   7         -6.4      3.353      7.781
   8         -6.4      2.565      3.564
   9         -6.3      2.952      9.752
  10         -6.2      2.522      5.775
  11         -6.2      2.253      5.725
  12         -6.2      2.713      8.318
  13         -6.2      3.539      7.052
  14         -6.1      2.869      6.789
  15         -6.1      2.636      6.317
  16         -6.1      3.444      7.286
  17         -6.1      2.087      3.170
  18         -6.1      1.962      3.099
  19         -6.1      3.008      4.579
  20         -6.1      3.266      6.723
Writing output ... done.
