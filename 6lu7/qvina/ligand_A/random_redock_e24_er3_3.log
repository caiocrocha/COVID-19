############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: 554180354
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.1      0.000      0.000
   2         -6.9      1.908      5.755
   3         -6.9      3.803      9.336
   4         -6.8      2.355      6.114
   5         -6.7      2.201      8.048
   6         -6.7      3.181      5.811
   7         -6.7      3.315      9.156
   8         -6.6      4.253      9.948
   9         -6.5      3.100      6.218
  10         -6.4      2.526      4.362
  11         -6.4      3.509      6.274
  12         -6.4      2.301      7.885
  13         -6.4      2.849      6.257
  14         -6.4      2.278      5.818
  15         -6.3      3.035      8.706
  16         -6.3      2.558      5.353
  17         -6.3      2.134      7.899
  18         -6.3      2.344      5.349
  19         -6.3      4.183      7.855
  20         -6.3      3.029      8.350
Writing output ... done.
