############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -1539260986
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -6.8      0.000      0.000
   2         -6.6      2.290      9.199
   3         -6.3      2.465      8.709
   4         -6.2      3.127      6.085
   5         -6.0      2.819      4.312
   6         -6.0      2.813      7.772
   7         -6.0      2.437      8.150
   8         -5.9      2.442      7.278
   9         -5.9      2.930      7.480
  10         -5.8      2.110      5.629
  11         -5.8      3.579      6.761
  12         -5.8      2.164      6.584
  13         -5.8      2.162      3.742
  14         -5.8      2.537      5.510
  15         -5.8      2.286      6.490
  16         -5.7      4.189     10.194
  17         -5.7      2.804      6.308
  18         -5.6      2.767      6.847
  19         -5.6      2.516      6.102
  20         -5.5      2.104      3.697
Writing output ... done.
