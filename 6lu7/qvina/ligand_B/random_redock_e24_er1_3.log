############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -2123606018
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.5      0.000      0.000
   2         -7.4      3.245      8.745
   3         -7.4      2.836      8.333
   4         -7.2      2.722     10.165
   5         -7.2      4.066     10.007
   6         -7.2      3.388      7.471
   7         -7.2      3.701      9.232
   8         -7.2      2.473      3.290
   9         -7.1      3.364      8.013
  10         -7.1      3.283      7.989
  11         -7.1      3.426      9.217
  12         -7.0      3.138      7.184
  13         -7.0      4.247      8.766
  14         -7.0      4.443      8.307
  15         -6.9      2.603     10.239
  16         -6.9      3.676     10.423
  17         -6.8      3.499     10.255
  18         -6.8      3.722     10.355
  19         -6.8      3.449      7.639
  20         -6.8      2.290      5.883
Writing output ... done.
