############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -1080475772
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.0      0.000      0.000
   2         -6.9      3.921      8.421
   3         -6.8      2.490      5.575
   4         -6.8      3.412      7.373
   5         -6.7      3.070      8.114
   6         -6.6      3.244      8.146
   7         -6.6      3.892      8.268
   8         -6.6      3.238      6.735
   9         -6.5      3.630      7.688
  10         -6.5      1.605      2.074
  11         -6.5      4.066      8.055
  12         -6.5      3.654      8.561
  13         -6.3      3.575      7.657
  14         -6.3      3.626      8.759
  15         -6.3      3.062      6.819
  16         -6.3      4.116      8.010
  17         -6.3      3.827      9.081
  18         -6.3      2.879      8.298
  19         -6.2      3.022      7.248
  20         -6.2      3.373      7.941
Writing output ... done.
