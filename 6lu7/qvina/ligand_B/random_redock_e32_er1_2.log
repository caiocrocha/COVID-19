############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: 1793076520
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.4      0.000      0.000
   2         -7.3      3.083      7.444
   3         -7.3      3.251      8.555
   4         -7.2      3.134      9.112
   5         -7.2      3.404      7.592
   6         -7.1      2.858      5.384
   7         -7.1      3.550      7.282
   8         -7.0      2.498      5.298
   9         -6.9      2.499      6.634
  10         -6.9      2.678      9.085
  11         -6.9      2.865      9.537
  12         -6.9      2.646      9.695
  13         -6.9      2.970      8.689
  14         -6.9      2.875      8.204
  15         -6.9      2.631      7.154
  16         -6.9      2.497      6.797
  17         -6.8      2.688      8.895
  18         -6.8      2.943      7.689
  19         -6.8      2.671      8.957
  20         -6.8      2.993     10.104
Writing output ... done.
