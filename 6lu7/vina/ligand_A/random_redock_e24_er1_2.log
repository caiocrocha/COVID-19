############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -423537142
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -6.8      0.000      0.000
   2         -6.6      3.685      7.438
   3         -6.6      3.582      7.501
   4         -6.5      3.183      6.430
   5         -6.4      2.999      5.261
   6         -6.3      3.953      7.027
   7         -6.3      2.032      5.524
   8         -6.3      2.601      9.962
   9         -6.3      3.111      9.024
  10         -6.3      2.644      7.154
  11         -6.3      3.579      6.611
  12         -6.2      3.000      8.230
  13         -6.2      2.359      9.550
  14         -6.2      2.826      6.802
  15         -6.2      2.798      5.042
  16         -6.2      3.063      7.444
  17         -6.2      1.796      2.164
  18         -6.2      3.049      9.704
  19         -6.1      2.304      5.219
  20         -6.0      3.921      8.816
Writing output ... done.
