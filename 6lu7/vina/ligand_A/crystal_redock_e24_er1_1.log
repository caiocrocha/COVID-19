############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: 199916186
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.7      0.000      0.000
   2         -7.4      2.805      7.369
   3         -7.3      2.721      9.487
   4         -7.3      2.632      6.951
   5         -7.3      2.922      8.981
   6         -7.3      2.742      7.831
   7         -7.2      2.770      9.872
   8         -7.2      2.740      9.544
   9         -7.2      2.845     10.011
  10         -7.0      3.639      9.576
  11         -7.0      2.766      6.600
  12         -7.0      2.239      5.152
  13         -7.0      2.258      9.029
  14         -7.0      2.834      5.376
  15         -7.0      2.453      5.867
  16         -7.0      2.465      9.064
  17         -6.9      2.886      6.643
  18         -6.9      2.904      7.308
  19         -6.8      2.528      5.890
  20         -6.8      2.479      6.688
Writing output ... done.
