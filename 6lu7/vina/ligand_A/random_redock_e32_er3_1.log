############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -882476388
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.4      0.000      0.000
   2         -7.4      2.255      5.544
   3         -7.3      2.384      5.724
   4         -7.1      2.324      6.901
   5         -7.1      2.207      3.359
   6         -7.0      3.626      9.834
   7         -7.0      2.581      8.807
   8         -6.9      3.615      9.661
   9         -6.8      2.814      9.161
  10         -6.8      2.846      6.538
  11         -6.8      2.739      8.984
  12         -6.8      3.961      9.841
  13         -6.8      2.975      5.901
  14         -6.8      3.377      9.288
  15         -6.7      4.034     10.144
  16         -6.6      3.123      7.548
  17         -6.6      2.557      8.327
  18         -6.6      3.677      5.795
  19         -6.6      2.774      5.650
  20         -6.6      3.298      9.215
Writing output ... done.
