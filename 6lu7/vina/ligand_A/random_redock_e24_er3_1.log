############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: 243219880
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.3      0.000      0.000
   2         -7.2      1.614      2.113
   3         -7.2      3.458      9.158
   4         -7.1      2.046      8.637
   5         -7.0      2.200      7.814
   6         -6.9      2.393      6.136
   7         -6.8      2.218      6.932
   8         -6.7      3.046      7.440
   9         -6.6      3.752      9.363
  10         -6.5      2.893      6.992
  11         -6.4      4.127      8.634
  12         -6.4      3.585      9.187
  13         -6.4      4.314      9.041
  14         -6.4      3.403      7.953
  15         -6.3      2.587      7.911
  16         -6.3      3.515      9.710
  17         -6.3      1.701      4.553
  18         -6.3      3.650      7.841
  19         -6.3      3.066      7.318
  20         -6.3      3.244      7.369
Writing output ... done.
