############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -925780082
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -6.9      0.000      0.000
   2         -6.6      2.192      5.772
   3         -6.5      2.890      7.874
   4         -6.5      2.759      9.089
   5         -6.4      2.415      7.649
   6         -6.4      3.125      7.766
   7         -6.3      2.410      8.060
   8         -6.2      2.171      7.704
   9         -6.2      1.492      2.012
  10         -6.1      3.202      7.868
  11         -6.1      1.509      4.766
  12         -6.0      2.483      7.386
  13         -6.0      2.096      8.165
  14         -6.0      3.011      8.030
  15         -6.0      4.317      9.930
  16         -6.0      2.756      6.882
  17         -6.0      2.252      5.238
  18         -6.0      3.440      7.376
  19         -5.9      2.793      7.151
  20         -5.9      2.990      8.909
Writing output ... done.
