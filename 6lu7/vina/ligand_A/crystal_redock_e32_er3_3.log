############################################################################
# If you used Quick Vina 2 in your work, please cite:                      #
#                                                                          #
# Amr Alhossary, Stephanus Daniel Handoko, Yuguang Mu, and Chee-Keong Kwoh,#
# Fast, Accurate, and Reliable Molecular Docking with QuickVina 2,         #
# Bioinformatics (2015), doi: 10.1093/bioinformatics/btv082                #
#                                                                          #
# You are also encouraged to cite Quick Vina 1:                            #
# Stephanus Daniel Handoko, Xuchang Ouyang, Chinh Tran To Su, Chee Keong   #
# Kwoh, Yew Soon Ong,                                                      #
# QuickVina: Accelerating AutoDock Vina Using Gradient-Based Heuristics for#
# Global Optimization,                                                     #
# IEEE/ACM Transactions on Computational Biology and Bioinformatics,vol.9, #
# no. 5, pp. 1266-1272, Sept.-Oct. 2012, doi: 10.1109/TCBB.2012.82         #
#                                                                          #
# and original AutoDock Vina paper:                                        #
# O. Trott, A. J. Olson,                                                   #
# AutoDock Vina: improving the speed and accuracy of docking with a        #
# new scoring function, efficient optimization and multithreading,         #
# Journal of Computational Chemistry 31 (2010) 455-461                     #
# doi: 10.1002/jcc.21334                                                   #
############################################################################

Reading input ... done.
Setting up the scoring function ... done.
Analyzing the binding site ... done.
Using random seed: -1800354880
Performing search ... done.
Refining results ... done.

mode |   affinity | dist from best mode
     | (kcal/mol) | rmsd l.b.| rmsd u.b.
-----+------------+----------+----------
   1         -7.6      0.000      0.000
   2         -7.2      2.456      3.495
   3         -7.2      2.503      9.263
   4         -7.2      3.248      7.545
   5         -7.2      2.293      3.857
   6         -7.1      2.424      7.002
   7         -7.1      2.415      5.916
   8         -7.1      2.908      9.287
   9         -7.0      1.909      5.772
  10         -6.9      2.543      7.479
  11         -6.9      3.230      6.187
  12         -6.9      2.572      4.406
  13         -6.9      2.734      7.273
  14         -6.9      3.522     10.558
  15         -6.8      3.345     10.422
  16         -6.8      2.388      4.120
  17         -6.8      2.622      5.142
  18         -6.8      2.389      9.948
  19         -6.8      2.859      8.335
  20         -6.8      2.408      4.913
Writing output ... done.
